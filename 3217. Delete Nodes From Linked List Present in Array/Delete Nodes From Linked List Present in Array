/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {number[]} nums
 * @param {ListNode} head
 * @return {ListNode}
 */
var modifiedList = function(nums, head) {
    let lookup={};

    nums.forEach((num)=>lookup[num]=true);


    while(head!=null && lookup[head.val])
    {
        head=head.next;
    }

    if(head==null)
    {
        return null;
    }

let current=head;

    while(current.next!=null )
    {
        if(lookup[current.next.val])
        {
            current.next=current.next.next;
        }
        else
        {
            current=current.next;
        }
    }

    return head;
};
